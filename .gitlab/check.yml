check:clang-format:
  stage: check
  tags:
    - shared_docker
  image:
    name: gcr.io/kaniko-project/executor:v1.15.0-debug
    entrypoint: [""]
  script:
    - !reference [.docker-config, script]
    - echo "${KANIKO_PUSH_ARGS}"
    - mkdir -p /kaniko/.docker
    - echo "${DOCKER_CFG}" > /kaniko/.docker/config.json
    - /kaniko/executor --context ${CI_PROJECT_DIR}
      --dockerfile docker/ifm-robotics/check/Dockerfile
      ${KANIKO_BUILD_ARGS}
      --no-push

check:vale-linting:
  variables:
    FORMATTING_TOOLS_REF: d7042c3b648c81be53aa6647788a565b720a418c
  image:
    name: jdkato/vale@sha256:2f6ec4ca2606accb80c13466fd91f1a4d82a4299c9139069d6db5dbcc1da9763
    entrypoint: [""]
  stage: check
  before_script:
    - apk update && apk add git
  script:
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab-ee.dev.ifm/syntron/support/csr/formatting-tools.git ${CI_PROJECT_DIR}/formatting-tools
    - cd ${CI_PROJECT_DIR}/formatting-tools
    - git reset --hard ${FORMATTING_TOOLS_REF}
    - vale --minAlertLevel error ../doc/sphinx/* ../README.md ../ChangeLog.md
  allow_failure: true

check:large-files:
  stage: check
  image: bitnami/git
  variables:
    GIT_DEPTH: 0
  script:
    - |
      large_files=$(git rev-list --objects HEAD | git cat-file --batch-check='%(objectname) %(objectsize) %(rest)' | awk '$2 >= 100*1024*1024 {print $3 " [" $1 "]"}')
      if [ -n "$large_files" ]; then
        echo "Large files found:"
        echo "$large_files"
        exit 1
      fi
  