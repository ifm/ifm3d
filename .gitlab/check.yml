check:clang-format:
  stage: check
  tags:
    - shared_docker
  image:
    name: gcr.io/kaniko-project/executor:v1.15.0-debug
    entrypoint: [""]
  script:
    - !reference [.docker-config, script]
    - echo "${KANIKO_PUSH_ARGS}"
    - mkdir -p /kaniko/.docker
    - echo "${DOCKER_CFG}" > /kaniko/.docker/config.json
    - /kaniko/executor --context ${CI_PROJECT_DIR}
      --dockerfile docker/ifm-robotics/check/Dockerfile
      ${KANIKO_BUILD_ARGS}
      --no-push

check:vale-linting:
  image:
    name: jdkato/vale:latest
    entrypoint: [""]
  stage: check
  allow_failure: true  
  before_script:
    - apk update && apk add git
  script:
    - git config --global user.email "support.robotics@ifm.com"
    - git config --global user.name "ifm-csr"
    - rm -rf /builds/syntron/support/csr/o3r/formatting-tools /builds/syntron/support/csr/o3r/vale
    - mkdir -p /builds/syntron/support/csr/o3r/formatting-tools
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab-ee.dev.ifm/syntron/support/csr/formatting-tools.git /builds/syntron/support/csr/o3r/formatting-tools
    - cd /builds/syntron/support/csr/o3r/formatting-tools
    - vale --minAlertLevel error /builds/syntron/support/csr/o3r/ifm3d/.

