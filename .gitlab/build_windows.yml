build:windows_2019:
  stage: build
  tags:
    - shared_docker_windows
  image:
    name: ${DOCKER_IMAGE_WINDOWS_BUILDER}
    entrypoint: ["cmd", "/S", "/C"]
  script:
    - 'cmake.exe -B build -G "Visual Studio 16 2019" -Ax64 -DCMAKE_WINDOWS_EXPORT_ALL_SYMBOLS=ON -DBUILD_MODULE_PCICCLIENT=ON -DCREATE_WIN_INSTALLER=ON .'
    - cd build
    - "cmake.exe --build . -j 8 --config Debug --target ALL_BUILD"
    - "cmake.exe --build . -j 8 --config Release --target ALL_BUILD"
    - 'cpack --config CPackConfig.cmake -C "Debug;Release"'
    - "compress-archive -path './_CPack_Packages/win64/NSIS/ifm3d_windows_*/*' -destinationpath '../ifm3d_installer/ifm3d_windows_binaries.zip' -update -compressionlevel optimal"
  artifacts:
    name: "ifm3d_windows_installer"
    paths:
      - ifm3d_installer/*.exe
      - ifm3d_installer/*.zip

build:windows_2019:python_wheel:
  stage: build
  tags:
    - shared_docker_windows
  image:
    name: ${DOCKER_IMAGE_WINDOWS_BUILDER}
    entrypoint: ["cmd", "/S", "/C"]
  parallel:
    matrix: !reference [.configs, python-windows-matrix]
  variables:
    IFM3D_CMAKE_GENERATOR: "Visual Studio 16 2019"
    CONFIG: Release
  script:
    - |
      & C:/python/python.${env:PYTHON_VERSION}/tools/python.exe -m pip wheel ${CI_PROJECT_DIR} --no-deps -w ${CI_PROJECT_DIR}\wheelhouse/
  artifacts:
    paths:
      - wheelhouse/*.whl
    expire_in: 1 week
  rules:
    - !reference [.tagged, rules]
    - !reference [.nightly, rules]
    - !reference [.manual, rules]
