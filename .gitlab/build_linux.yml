build:linux:
  stage: build
  tags:
    - shared_docker
  variables:
    BASE_IMAGE: ubuntu:18.04
  image:
    name: gcr.io/kaniko-project/executor:v1.15.0-debug
    entrypoint: [""]
  script:
    - !reference [.docker-config, script]
    - echo "${KANIKO_PUSH_ARGS}"
    - mkdir -p /kaniko/.docker
    - echo "${DOCKER_CFG}" > /kaniko/.docker/config.json
    - /kaniko/executor --context ${CI_PROJECT_DIR}
      --dockerfile docker/ifm-robotics/docker/Dockerfile
      ${KANIKO_BUILD_ARGS}
      ${KANIKO_PUSH_ARGS}
      ${DOCKER_BUILD_ARGS}

# Docker
build:linux:docker:
  stage: build
  parallel:
    matrix: !reference [.configs, docker-matrix]
  tags:
    - ${RUNNER}
  image:
    name: gcr.io/kaniko-project/executor:v1.15.0-debug
    entrypoint: [""]
  script:
    - !reference [.docker-config, script]
    - mkdir -p /kaniko/.docker
    - echo "${DOCKER_CFG}" > /kaniko/.docker/config.json
    - /kaniko/executor --context ${CI_PROJECT_DIR}
      --dockerfile docker/ifm-robotics/docker/Dockerfile
      --digest-file ${CI_PROJECT_DIR}/digest/${TAG_POSTFIX}
      ${KANIKO_BUILD_ARGS}
      ${KANIKO_PUSH_ARGS}
      ${DOCKER_BUILD_ARGS}
  artifacts:
    paths:
          - digest/*
  rules:
    - !reference [.tagged, rules]
    - !reference [.nightly, rules]

# Debs
build:linux:deb:
  stage: build
  parallel:
   matrix: !reference [.configs, deb-matrix]
  tags:
    - ${RUNNER}
  image:
    name: gcr.io/kaniko-project/executor:v1.15.0-debug
    entrypoint: [""]
  script:
    - !reference [.docker-config, script]
    - mkdir -p /kaniko/.docker
    - echo "${DOCKER_CFG}" > /kaniko/.docker/config.json
    - /kaniko/executor --context ${CI_PROJECT_DIR}
      --dockerfile docker/ifm-robotics/deb/Dockerfile
      --no-push
      ${KANIKO_BUILD_ARGS}
      ${DOCKER_BUILD_ARGS}
    - cp /out/*.tar ${CI_PROJECT_DIR}/
  artifacts:
    paths:
      - ifm3d-*.tar
    expire_in: 1 week
  rules:
    - !reference [.tagged, rules]
    - !reference [.nightly, rules]
    - !reference [.manual, rules]

# Python wheels
build:linux:python_wheel:
  image: ${IMAGE}
  stage: build
  parallel:
    matrix: !reference [.configs, python-linux-matrix]
  tags:
    - ${RUNNER}
  script:
    - |
      "/opt/python/${PYTHON_VERSION}/bin/pip" wheel ${CI_PROJECT_DIR} --no-deps -w /tmp/wheelhouse/
      for whl in /tmp/wheelhouse/*.whl; do
        auditwheel repair "$whl" -w /${CI_PROJECT_DIR}/wheelhouse/
      done
  artifacts:
    paths:
      - wheelhouse/*.whl
    expire_in: 1 week
  rules:
    - !reference [.tagged, rules]
    - !reference [.nightly, rules]
    - !reference [.manual, rules]

# Docs
build:linux:docs:
  stage: build
  tags:
    - shared_docker
  image:
    name: gcr.io/kaniko-project/executor:v1.15.0-debug
    entrypoint: [""]
  script:
    - !reference [.docker-config, script]
    - mkdir -p /kaniko/.docker
    - echo "${DOCKER_CFG}" > /kaniko/.docker/config.json
    - /kaniko/executor --context ${CI_PROJECT_DIR}
      --dockerfile docker/ifm-robotics/doc/Dockerfile
      --no-push
      ${KANIKO_BUILD_ARGS}
      ${DOCKER_BUILD_ARGS}
    - mv /out ${CI_PROJECT_DIR}/docs
  artifacts:
    paths:
      - docs
