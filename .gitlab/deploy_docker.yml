.docker_manifest:
  stage: deploy
  tags:
    - shared_docker
  image: 
    name: mplatform/manifest-tool:alpine-v2.0.8
    entrypoint: [""]
  before_script:
    - !reference [.docker-config, script]
    - mkdir -p $HOME/.docker
    - echo "${DOCKER_CFG}" > $HOME/.docker/config.json

.docker_deploy:
  latest:
    - |
      for REGISTRY in $REGISTRIES; do

        TARGET=$(eval echo "\${${REGISTRY}_REPO}")

        manifest-tool push from-args \
        --target "${TARGET}:${DOCKER_TAG}-ubuntu" \
        --template "${TARGET}:${DOCKER_TAG}-ubuntu-ARCH" \
        --platforms "linux/arm64,linux/amd64"

        manifest-tool push from-args \
        --target "${TARGET}:${DOCKER_TAG}" \
        --template "${TARGET}:${DOCKER_TAG}-ubuntu-ARCH" \
        --platforms "linux/arm64,linux/amd64"

        manifest-tool push from-args \
        --target "${TARGET}:${DOCKER_TAG}-l4t" \
        --template "${TARGET}:${DOCKER_TAG}-l4t-ARCH" \
        --platforms "linux/arm64"

      done
  stable:
    - |
      for REGISTRY in $REGISTRIES; do

        TARGET=$(eval echo "\${${REGISTRY}_REPO}")

        manifest-tool push from-args \
        --target "${TARGET}:stable-ubuntu" \
        --template "${TARGET}:${DOCKER_TAG}-ubuntu-ARCH" \
        --platforms "linux/arm64,linux/amd64"

        manifest-tool push from-args \
        --target "${TARGET}:stable" \
        --template "${TARGET}:${DOCKER_TAG}-ubuntu-ARCH" \
        --platforms "linux/arm64,linux/amd64"

        manifest-tool push from-args \
        --target "${TARGET}:stable-l4t" \
        --template "${TARGET}:${DOCKER_TAG}-l4t-ARCH" \
        --platforms "linux/arm64"

      done

deploy:linux:docker_tagged:
  extends: .docker_manifest
  needs:
    - job: deploy:start
      artifacts: false
    - job: build:linux:docker
      artifacts: false
  script:
    - !reference [.docker_deploy, latest]
    - !reference [.docker_deploy, stable]
  rules:
    - !reference [.tagged, rules]

deploy:linux:docker_nightly:
  extends: .docker_manifest
  needs:
    - job: build:linux:docker
      artifacts: false
  script:
    - !reference [.docker_deploy, latest]
  rules:
    - !reference [.nightly, rules]
