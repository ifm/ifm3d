stages:
  - build
  - test
  - deploy

variables:
  SKIP_TEST : "false"

build:windows_2019:
  stage: build
  tags:
    - ifm3d_windows
  variables:
    HTTP_PROXY: ${CI_HTTP_PROXY}
    HTTPS_PROXY: ${CI_HTTPS_PROXY}
    NO_PROXY: ${CI_NO_PROXY}
  script:
    - mkdir build
    - cd build
    - 'cmake.exe -G "Visual Studio 16 2019" -Ax64 -DCMAKE_WINDOWS_EXPORT_ALL_SYMBOLS=ON  -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=D:/ifm3d_deps/install_VS2019 -DBUILD_TESTS=ON -DCMAKE_PREFIX_PATH="D:/ifm3d_deps/install_VS2019;D:/ifm3d_deps/install_VS2019/PCL 1.12.0" -DGTEST_CMAKE_DIR=D:/ifm3d_deps/googletest/googletest -Dgtest_force_shared_crt=TRUE ..'
    - 'cmake.exe --build . --config Release --target ALL_BUILD'

build:windows_2019:python_wheel:
  stage: build
  parallel:
    matrix:
      - PYTHON_VERSION: 
        - "3.7.9"
        - "3.8.10"
        - "3.9.7"
  variables:
    IFM3D_CMAKE_GENERATOR : "Visual Studio 16 2019"
    IFM3D_BUILD_DIR : D:/ifm3d_deps
    IFM3D_INSTALL_DIR : D:/ifm3d_deps/install
    CONFIG : Release
    HTTP_PROXY: ${CI_HTTP_PROXY}
    HTTPS_PROXY: ${CI_HTTPS_PROXY}
    NO_PROXY: ${CI_NO_PROXY}
  tags:
    - ifm3d_windows
  script:
    - |
      & D:/ifm3d_deps/python/python.${env:PYTHON_VERSION}/tools/python.exe -m pip wheel ${CI_PROJECT_DIR} --no-deps -w ${CI_PROJECT_DIR}\wheelhouse/
  artifacts:
    paths:
      - wheelhouse/*.whl
    expire_in: 1 week
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+$/'



# Run unit test
test:windows_2019:
  stage: test
  tags:
    - ifm3d_windows
  variables:
   GIT_CLEAN_FLAGS: none
   HTTP_PROXY: ${CI_HTTP_PROXY}
   HTTPS_PROXY: ${CI_HTTPS_PROXY}
   NO_PROXY: ${CI_NO_PROXY}
  script:
    - cd build
    - cmake.exe --build . --config Release --target check
  dependencies:
    - build:windows_2019
  except:
    variables:
    - $SKIP_TEST == "false"

deploy:windows_2019:
  stage : deploy
  tags:
    - ifm3d_windows
  script:
    - echo "please add deployment script"
  dependencies:
    - test:windows_2019

deploy:python_wheels:
  image: python:3
  stage : deploy
  tags:
    - shared_docker
  needs: 
    - job: build:windows_2019:python_wheel
      artifacts: true
    - job: build:linux:amd64:python_wheel
      artifacts: true
  variables:
    TWINE_USERNAME: __token__
    TWINE_PASSWORD: ${PYPI_TOKEN}
  script:
    - |
      pip install --no-cache-dir twine
      twine upload wheelhouse/*
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+$/'



# Linux build

build:linux:aarch64:
  image: nexus3.intra.ifm:18443/arm64v8/ifm3d-base:0.0.5
  stage: build
  variables:
    REQUESTS_CA_BUNDLE: "/etc/ssl/certs/ca-certificates.crt"
    HTTP_PROXY: ${CI_HTTP_PROXY}
    HTTPS_PROXY: ${CI_HTTPS_PROXY}
    NO_PROXY: ${CI_NO_PROXY}
  tags:
    - shared_docker_aarch64
  before_script:
    - echo ${http_proxy}
    - echo ${https_proxy}
    - echo ${no_proxy}
  script:
    - mkdir build
    - cd build
    - |
      cmake -GNinja \
            -DCMAKE_INSTALL_PREFIX=/usr \
            -DBUILD_MODULE_OPENCV=ON \
            -DBUILD_MODULE_PYBIND11=ON \
            -DBUILD_MODULE_PCICCLIENT=ON \
            -DPYTHON_EXECUTABLE=/usr/bin/python3 \
            ..
    - ninja
    - ninja package
    - ninja repackage
    - IFM3D_VERSION=$(modules/tools/src/bin/ifm3d --version | cut -d "=" -f 2)
    - export IFM3D_VERSION
    - mkdir -p /opt/apt-repo
    - cp *.deb /opt/apt-repo
    - (cd /opt/apt-repo && (dpkg-scanpackages . /dev/null | gzip -9c > Packages.gz))
    - source /etc/os-release && export UBUNTU_CODENAME
    - tar cvf ifm3d-ubuntu-${UBUNTU_CODENAME}-aarch64-debs_${IFM3D_VERSION}-${CI_PIPELINE_IID}.tar -C /opt/apt-repo .
  artifacts:
    paths:
      - build/*.tar
    expire_in: 1 week



# Linux python wheels
build:linux:amd64:python_wheel:
  image: quay.io/pypa/manylinux2014_x86_64:latest
  stage: build
  tags:
    - shared_docker
  script:
    - |
      for PYBIN in /opt/python/*/bin; do
        "${PYBIN}/pip" wheel ${CI_PROJECT_DIR} --no-deps -w /tmp/wheelhouse/
      done
      for whl in /tmp/wheelhouse/*.whl; do
        auditwheel repair "$whl" -w /${CI_PROJECT_DIR}/wheelhouse/
      done
  artifacts:
    paths:
      - wheelhouse/*.whl
    expire_in: 1 week
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+$/'